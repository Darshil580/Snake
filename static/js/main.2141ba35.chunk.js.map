{"version":3,"sources":["sounds/lost.wav","sounds/levelchange.wav","Game.js","sounds/eating.wav","sounds/highscoreBeat.wav","index.js"],"names":["Square","props","className","class","style","top","y","left","x","backgroundColor","color","borderRadius","border","boxShadow","id","ObstacleSquare","Display","name","value","GameOver","score","highscore","Restart","onClick","reset","Snake","state","size","food","Math","floor","random","direction","over","level","init","move","snakebody","badpool","document","addEventListener","event","handlePress","global","loop","setInterval","moveSnake","setState","this","i","length","first","audio","Audio","eating","play","updateScore","genFood","snake","check","lost","touched","touched_food","loc","parentCallback","removeEventListener","clearInterval","push","e","key","head","squares","toggle","blocks","renderSnake","obstacles","React","Component","GameField","beatsound","highscoreBeat","console","log","levelchangeBeat","levelUpdate","current","updateLevel","scoreCallback","createRef","ref","Game","bool","setTimeout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2141ba35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lost.7ebf8a8f.wav\";","export default __webpack_public_path__ + \"static/media/levelchange.05ba2c65.wav\";","import \"./Game.css\";\nimport \"./Effect.css\";\nimport eating from \"./sounds/eating.wav\";\nimport lost from \"./sounds/lost.wav\";\nimport highscoreBeat from \"./sounds/highscoreBeat.wav\";\nimport levelchangeBeat from \"./sounds/levelchange.wav\";\n// import backSound from \"./sounds/background.mp3\";\nimport React from \"react\";\n\nfunction Square(props) {\n  return (\n    <span\n      className={\"square border-black \" + props.class}\n      style={{\n        top: props.y * 25 + \"px\",\n        left: props.x * 25 + \"px\",\n        backgroundColor: props.color,\n        borderRadius: props.borderRadius,\n        border: \"1px solid lightcoral\",\n        boxShadow: props.boxShadow,\n      }}\n      id={props.id}\n    ></span>\n  );\n}\n\nfunction ObstacleSquare(props) {\n  return (\n    <span\n      className=\"square\"\n      style={{\n        top: props.y * 25 + \"px\",\n        left: props.x * 25 + \"px\",\n        backgroundColor: \"white\",\n        boxShadow: \"1px 1px 5px 1px\",\n      }}\n      id={props.id}\n    ></span>\n  );\n}\n\nfunction Display(props) {\n  return (\n    <h2 className={props.class}>\n      {props.name} : {props.value}\n    </h2>\n  );\n}\n\nfunction GameOver(props) {\n  return (\n    <h3 className={props.class}>\n      The Game is Over. Your Score is : {props.score}\n      <br />\n      Your Highest Score is : {props.highscore}\n    </h3>\n  );\n}\n\nfunction Restart(props) {\n  return (\n    <button className=\"btn btn-light\" onClick={props.reset}>\n      Restart\n    </button>\n  );\n}\n\nclass Snake extends React.Component {\n  static loop;\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: 4,\n      food: [Math.floor(Math.random() * 40), Math.floor(Math.random() * 20)],\n      direction: \"left\",\n      over: false,\n      level: 1,\n      init: true, // For Reseting snake on level update and change to intial settings\n      move: true, // Working on it\n      snakebody: [\n        // Initial Body\n        [30, 5],\n        [31, 5],\n        [32, 5],\n        [33, 5],\n      ],\n      badpool: [],\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", (event) => {\n      this.handlePress(event);\n      if (this.state.init) {\n        global.loop = setInterval(() => this.moveSnake(), 80);\n        this.setState({ init: false });\n      }\n    });\n  }\n\n  genFood() {\n    const { badpool } = this.state;\n\n    let x = Math.floor(Math.random() * 40);\n    let y = Math.floor(Math.random() * 20);\n\n    for (let i = 0; i < badpool.length; i++) {\n      if (badpool[i][0] === x && badpool[i][1] === y) {\n        x = Math.floor(Math.random() * 40);\n        y = Math.floor(Math.random() * 20);\n        i = 0;\n      }\n    }\n\n    this.setState({ food: [x, y] });\n  }\n\n  touched_food() {\n    const first = this.state.snakebody[0];\n    const { food } = this.state;\n    let audio = new Audio(eating);\n\n    if (first[0] === food[0] && first[1] === food[1]) {\n      audio.play();\n      this.props.updateScore();\n      this.genFood();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  over() {\n    let snake = this.state.snakebody;\n    let check = snake[0];\n    const { level } = this.state;\n    // Checking Body Touch\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[i][0] === check[0] && snake[i][1] === check[1]) {\n        let audio = new Audio(lost);\n        audio.play();\n        return true;\n      }\n    }\n\n    // Checking Field Touch for Level 2\n    if (level === 2 || level === 4) {\n      if (\n        check[0] === 0 ||\n        check[1] === 0 ||\n        check[0] === 39 ||\n        check[1] === 19\n      ) {\n        let audio = new Audio(lost);\n\n        audio.play();\n        return true;\n      }\n    }\n\n    // Checking Field Touch for Level 3\n    if (level === 3 || level === 4) {\n      for (let y = 4; y < 15; y++) {\n        if (check[0] === 19 && check[1] === y) {\n          let audio = new Audio(lost);\n          audio.play();\n          return true;\n        }\n      }\n      for (let x = 4; x < 35; x++) {\n        if (check[0] === x && check[1] === 9) {\n          let audio = new Audio(lost);\n\n          audio.play();\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  moveSnake() {\n    const touched = this.touched_food();\n    let over = this.over();\n    let { size, init } = this.state;\n    let loc = this.state.snakebody;\n\n    if (!over) {\n      if (touched && !init) {\n        loc.push([loc[size - 1][0], loc[size - 1][1]]);\n        this.setState({ size: size + 1, snakebody: loc });\n      }\n\n      for (let i = size - 1; i > 0; i--) {\n        loc[i][0] = loc[i - 1][0];\n        loc[i][1] = loc[i - 1][1];\n      }\n\n      if (this.state.direction === \"left\") {\n        if (loc[0][0] === 0) {\n          loc[0][0] = 40;\n        }\n        loc[0][0] = loc[0][0] - 1;\n      } else if (this.state.direction === \"right\") {\n        if (loc[0][0] === 39) {\n          loc[0][0] = -1;\n        }\n        loc[0][0] = loc[0][0] + 1;\n      } else if (this.state.direction === \"up\") {\n        if (loc[0][1] === 0) {\n          loc[0][1] = 20;\n        }\n        loc[0][1] = loc[0][1] - 1;\n      } else if (this.state.direction === \"down\") {\n        if (loc[0][1] === 19) {\n          loc[0][1] = -1;\n        }\n        loc[0][1] = loc[0][1] + 1;\n      } else {\n      }\n      this.setState({ snakebody: loc });\n    } else {\n      this.props.parentCallback();\n      document.removeEventListener(\"keydown\", (event) =>\n        this.handlePress(event)\n      );\n      clearInterval(global.loop);\n    }\n  }\n\n  handlePress(e) {\n    let { direction } = this.state;\n\n    if (\n      e.key === \"ArrowLeft\" &&\n      direction !== \"left\" &&\n      direction !== \"right\"\n    ) {\n      this.setState({ direction: \"left\" });\n\n      // this.moveSnake();\n    } else if (\n      e.key === \"ArrowRight\" &&\n      direction !== \"right\" &&\n      direction !== \"left\"\n    ) {\n      this.setState({ direction: \"right\" });\n    } else if (\n      e.key === \"ArrowUp\" &&\n      direction !== \"up\" &&\n      direction !== \"down\"\n    ) {\n      this.setState({ direction: \"up\" });\n    } else if (\n      e.key === \"ArrowDown\" &&\n      direction !== \"down\" &&\n      direction !== \"up\"\n    ) {\n      this.setState({ direction: \"down\" });\n    }\n  }\n\n  updateLevel(level) {\n    let badpool = [];\n\n    if (level === 2 || level === 4) {\n      for (let x = 0; x < 40; x++) {\n        for (let y = 0; y < 20; y++) {\n          if (x === 0) {\n            badpool.push([x, y]);\n          } else if (y === 0) {\n            badpool.push([x, y]);\n          } else if (x === 39) {\n            badpool.push([x, y]);\n          } else if (y === 19) {\n            badpool.push([x, y]);\n          }\n        }\n      }\n    }\n\n    if (level === 3 || level === 4) {\n      for (let y = 4; y < 15; y++) {\n        badpool.push([19, y]);\n      }\n      for (let x = 4; x < 35; x++) {\n        badpool.push([x, 9]);\n      }\n    }\n\n    clearInterval(global.loop);\n    this.setState({\n      level: level,\n      snakebody: [\n        [30, 5],\n        [31, 5],\n        [32, 5],\n        [33, 5],\n      ],\n      size: 4,\n      badpool: badpool,\n      direction: \"left\",\n      init: true,\n    });\n  }\n\n  renderSnake() {\n    let head = true;\n    let squares = [];\n    let { size } = this.state;\n    let loc = this.state.snakebody;\n    let toggle = 1;\n\n    for (let i = 0; i < size; i++) {\n      if (toggle === 1 && head === true) {\n        head = false;\n        squares.push(\n          <Square\n            x={loc[i][0]}\n            y={loc[i][1]}\n            id={this.props.id}\n            color=\"#ffc4d0\"\n            boxShadow=\"0px 0px 25px 5px lightcoral\"\n            key={i}\n          />\n        );\n        toggle = 2;\n      } else if (toggle === 1) {\n        squares.push(\n          <Square\n            x={loc[i][0]}\n            y={loc[i][1]}\n            id={this.props.id}\n            color=\"#ffc4d0\"\n            key={i}\n          />\n        );\n        toggle = 2;\n      } else if (toggle === 2) {\n        squares.push(\n          <Square\n            x={loc[i][0]}\n            y={loc[i][1]}\n            id={this.props.id}\n            color=\"#f7ddde\"\n            key={i}\n          />\n        );\n        toggle = 3;\n      } else if (toggle === 3) {\n        squares.push(\n          <Square\n            x={loc[i][0]}\n            y={loc[i][1]}\n            id={this.props.id}\n            color=\"#fbe8e7\"\n            key={i}\n            // borderRadius=\"7px\"\n          />\n        );\n        toggle = 4;\n      } else {\n        squares.push(\n          <Square\n            x={loc[i][0]}\n            y={loc[i][1]}\n            id={this.props.id}\n            color=\"#fcf5ee\"\n            key={i}\n          />\n        );\n        toggle = 1;\n      }\n    }\n\n    return squares;\n  }\n\n  obstacles() {\n    const { level } = this.state;\n    let blocks = [];\n\n    if (level === 2 || level === 4) {\n      for (let x = 0; x < 40; x++) {\n        for (let y = 0; y < 20; y++) {\n          if (x === 0) {\n            blocks.push(<ObstacleSquare x={0} y={y} />);\n          } else if (y === 0) {\n            blocks.push(<ObstacleSquare x={x} y={0} />);\n          } else if (x === 39) {\n            blocks.push(<ObstacleSquare x={39} y={y} />);\n          } else if (y === 19) {\n            blocks.push(<ObstacleSquare x={x} y={19} />);\n          }\n        }\n      }\n    }\n\n    if (level === 3 || level === 4) {\n      for (let y = 4; y < 15; y++) {\n        blocks.push(<ObstacleSquare x={19} y={y} />);\n      }\n      for (let x = 4; x < 35; x++) {\n        blocks.push(<ObstacleSquare x={x} y={9} />);\n      }\n    }\n\n    return blocks;\n  }\n\n  food() {\n    let { food } = this.state;\n    return (\n      <Square\n        id=\"food\"\n        x={food[0]}\n        y={food[1]}\n        class=\"food\"\n        color=\"lightcoral\"\n        borderRadius=\"7px white\"\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderSnake()}\n        {this.obstacles()}\n        {this.food()}\n      </div>\n    );\n  }\n}\n\nclass GameField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      over: false,\n      score: 0,\n      level: 1,\n      highscore: 0,\n      beatsound: true,\n    };\n    this.levelUpdate = React.createRef(); // to call the child method from parent method\n  }\n\n  reset = () => {\n    this.setState({ over: false, score: 0, level: 1, beatsound: true });\n  };\n\n  updateScore = () => {\n    let { score, level, highscore } = this.state;\n\n    score = score + 1;\n\n    if (score > highscore) {\n      highscore = highscore + 1;\n      if (this.state.beatsound === true) {\n        let audio = new Audio(highscoreBeat);\n        console.log(\"asd\");\n        this.setState({ beatsound: false });\n        audio.play();\n      }\n    }\n\n    this.setState({ score: score, highscore: highscore });\n\n    if (score > 5 && level === 1) {\n      let LevelChangeAudio = new Audio(levelchangeBeat);\n      LevelChangeAudio.play();\n      level = 2;\n      this.levelUpdate.current.updateLevel(level);\n      this.setState({ level: level });\n    } else if (score > 10 && level === 2) {\n      let LevelChangeAudio = new Audio(levelchangeBeat);\n      LevelChangeAudio.play();\n      level = 3;\n      this.levelUpdate.current.updateLevel(level);\n      this.setState({ level: level });\n    } else if (score > 15 && level === 3) {\n      let LevelChangeAudio = new Audio(levelchangeBeat);\n      LevelChangeAudio.play();\n      level = 4;\n      this.levelUpdate.current.updateLevel(level);\n      this.setState({ level: level });\n    }\n  };\n\n  scoreCallback = () => {\n    this.setState({ over: true });\n  };\n\n  render() {\n    const { score, over, level, highscore } = this.state;\n\n    if (!over) {\n      return (\n        <div className=\"game\">\n          <div className=\"scene\" id=\"info\">\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n            <div className=\"panel\"></div>\n          </div>\n          <div id=\"details\">\n            {/* <div className=\"row\"> */}\n            <Display name=\"Score\" value={score} class=\"data\" />\n            <Display name=\"Level\" value={level} class=\"data\" />\n            <Display name=\"Highscore\" value={highscore} class=\"data\" />\n            {/* </div> */}\n          </div>\n\n          <div className=\"surface border-white\">\n            <Snake\n              parentCallback={this.scoreCallback}\n              updateScore={this.updateScore}\n              ref={this.levelUpdate}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <GameOver score={score} class=\"over\" highscore={highscore} />\n          <Restart reset={this.reset} />\n        </div>\n      );\n    }\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bool: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ bool: false });\n    }, 3000);\n  }\n\n  render() {\n    if (this.state.bool === true) {\n      return (\n        <div className=\"CS50\">\n          <h1 className=\"typing\">This is CS50 Final Project Snake !</h1>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header \">\n            <GameField />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Game;\n","export default __webpack_public_path__ + \"static/media/eating.80f01a1b.wav\";","export default __webpack_public_path__ + \"static/media/highscoreBeat.a9c7545d.wav\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}